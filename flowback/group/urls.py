from django.urls import path

from .views.group import (GroupFolderListApi, GroupListApi, GroupDetailApi, GroupCreateApi, GroupUpdateApi,
                          GroupDeleteApi, GroupMailApi, WorkGroupListAPI, WorkGroupUserListAPI,
                          WorkGroupUserJoinRequestListAPI,
                          WorkGroupCreateAPI, WorkGroupUpdateAPI, WorkGroupDeleteAPI, WorkGroupUserJoinAPI,
                          WorkGroupUserLeaveAPI,
                          WorkGroupUserAddAPI, WorkGroupUserUpdateAPI, WorkGroupUserRemoveAPI,
                          GroupNotificationSubscribeAPI)
from .views.user import (GroupUserListApi,
                         GroupUserUpdateApi,
                         GroupJoinApi,
                         GroupLeaveApi,
                         GroupInviteApi,
                         GroupInviteAcceptApi,
                         GroupInviteRejectApi, GroupInviteListApi, GroupUserDeleteAPI)
from .views.permission import (GroupPermissionListApi,
                               GroupPermissionCreateApi,
                               GroupPermissionUpdateApi,
                               GroupPermissionDeleteApi)
from .views.tag import (GroupTagsListApi,
                        GroupTagsCreateApi,
                        GroupTagsUpdateApi,
                        GroupTagsDeleteApi, GroupTagIntervalMeanAbsoluteCorrectnessAPI)
from .views.delegate import (GroupUserDelegateListApi,
                             GroupUserDelegateApi,
                             GroupUserDelegateUpdateApi,
                             GroupUserDelegateDeleteApi,
                             GroupUserDelegatePoolListApi,
                             GroupUserDelegatePoolCreateApi,
                             GroupUserDelegatePoolDeleteApi)
from .views.schedule import (GroupScheduleEventListAPI,
                             GroupScheduleEventCreateAPI,
                             GroupScheduleEventUpdateAPI,
                             GroupScheduleEventDeleteAPI, GroupScheduleSubscribeAPI)
from .views.kanban import (GroupKanbanEntryListAPI,
                           GroupKanbanEntryCreateAPI,
                           GroupKanbanEntryUpdateAPI,
                           GroupKanbanEntryDeleteAPI)
from .views.thread import (GroupThreadListAPI,
                           GroupThreadCreateAPI,
                           GroupThreadUpdateAPI,
                           GroupThreadDeleteAPI,
                           GroupThreadCommentListAPI,
                           GroupThreadCommentCreateAPI,
                           GroupThreadCommentUpdateAPI,
                           GroupThreadCommentDeleteAPI,
                           GroupThreadCommentVoteAPI,
                           GroupThreadCommentAncestorListAPI,
                           GroupThreadVoteUpdateAPI)
from .views.comment import (GroupDelegatePoolCommentListAPI,
                            GroupDelegatePoolCommentCreateAPI,
                            GroupDelegatePoolCommentUpdateAPI,
                            GroupDelegatePoolCommentDeleteAPI, GroupDelegatePoolCommentVoteAPI)

group_patterns = [
    path('folders', GroupFolderListApi.as_view(), name='group_folder_list'),
    path('list', GroupListApi.as_view(), name='groups'),
    path('<int:group>/detail', GroupDetailApi.as_view(), name='group'),
    path('create', GroupCreateApi.as_view(), name='group_create'),
    path('<int:group>/update', GroupUpdateApi.as_view(), name='group_update'),
    path('<int:group>/delete', GroupDeleteApi.as_view(), name='group_delete'),
    path('<int:group>/mail', GroupMailApi.as_view(), name='group_mail'),
    path('<int:group_id>/notification/subscribe',
         GroupNotificationSubscribeAPI.as_view(),
         name='group_notification_subscribe'),

    path('<int:group_id>/users', GroupUserListApi.as_view(), name='group_users'),
    path('<int:group>/user/update', GroupUserUpdateApi.as_view(), name='group_user_update'),
    path('<int:group_id>/user/delete', GroupUserDeleteAPI.as_view(), name='group_user_delete'),
    path('<int:group>/join', GroupJoinApi.as_view(), name='group_join'),
    path('<int:group>/leave', GroupLeaveApi.as_view(), name='group_leave'),
    path('<int:group>/invites', GroupInviteListApi.as_view(), name='group_invite_list'),
    path('invites', GroupInviteListApi.as_view(), name='group_user_invite_list'),
    path('<int:group>/invite', GroupInviteApi.as_view(), name='group_invite'),
    path('<int:group>/invite/accept', GroupInviteAcceptApi.as_view(), name='group_invite_accept'),
    path('<int:group>/invite/reject', GroupInviteRejectApi.as_view(), name='group_invite_reject'),

    path('<int:group_id>/list', WorkGroupListAPI.as_view(), name='work_group_list'),
    path('workgroup/<int:work_group_id>/list', WorkGroupUserListAPI.as_view(), name='work_group_user_list'),
    path('workgroup/<int:work_group_id>/joinrequest/list',
         WorkGroupUserJoinRequestListAPI.as_view(),
         name='work_group_user_list'),
    path('<int:group_id>/workgroup/create', WorkGroupCreateAPI.as_view(), name='work_group_create'),
    path('workgroup/<int:work_group_id>/update', WorkGroupUpdateAPI.as_view(), name='work_group_update'),
    path('workgroup/<int:work_group_id>/delete', WorkGroupDeleteAPI.as_view(), name='work_group_delete'),
    path('workgroup/<int:work_group_id>/join', WorkGroupUserJoinAPI.as_view(), name='work_group_join'),
    path('workgroup/<int:work_group_id>/leave', WorkGroupUserLeaveAPI.as_view(), name='work_group_leave'),
    path('workgroup/<int:work_group_id>/user/add', WorkGroupUserAddAPI.as_view(), name='work_group_user_add'),
    path('workgroup/<int:work_group_id>/user/update', WorkGroupUserUpdateAPI.as_view(), name='work_group_user_update'),
    path('workgroup/<int:work_group_id>/user/remove', WorkGroupUserRemoveAPI.as_view(), name='work_group_user_remove'),

    path('<int:group>/permissions', GroupPermissionListApi.as_view(), name='group_permissions'),
    path('<int:group>/permission/create', GroupPermissionCreateApi.as_view(), name='group_permission_create'),
    path('<int:group>/permission/update', GroupPermissionUpdateApi.as_view(), name='group_permission_update'),
    path('<int:group>/permission/delete', GroupPermissionDeleteApi.as_view(), name='group_permission_delete'),

    path('<int:group>/tags', GroupTagsListApi.as_view(), name='group_tags'),
    path('<int:group>/tag/create', GroupTagsCreateApi.as_view(), name='group_tags_create'),
    path('<int:group>/tag/update', GroupTagsUpdateApi.as_view(), name='group_tags_update'),
    path('<int:group>/tag/delete', GroupTagsDeleteApi.as_view(), name='group_tags_delete'),
    path('tag/<int:tag_id>/imac', GroupTagIntervalMeanAbsoluteCorrectnessAPI.as_view(), name='group_tag_imac'),

    path('<int:group>/delegates', GroupUserDelegateListApi.as_view(), name='group_user_delegates'),
    path('<int:group>/delegate/create', GroupUserDelegateApi.as_view(), name='group_user_delegate'),
    path('<int:group>/delegate/update', GroupUserDelegateUpdateApi.as_view(), name='group_user_delegate_update'),
    path('<int:group>/delegate/delete', GroupUserDelegateDeleteApi.as_view(), name='group_user_delegate_delete'),
    path('<int:group>/delegate/pools', GroupUserDelegatePoolListApi.as_view(), name='group_user_delegate_pools'),
    path('<int:group>/delegate/pool/create',
         GroupUserDelegatePoolCreateApi.as_view(),
         name='group_user_delegate_pool_create'),
    path('<int:group>/delegate/pool/delete',
         GroupUserDelegatePoolDeleteApi.as_view(),
         name='group_user_delegate_pool_delete'),

    path('delegate/pool/<int:delegate_pool_id>/comment/list',
         GroupDelegatePoolCommentListAPI.as_view(),
         name='group_user_delegate_pool_list'),
    path('delegate/pool/<int:delegate_pool_id>/comment/create',
         GroupDelegatePoolCommentCreateAPI.as_view(),
         name='group_user_delegate_pool_create'),
    path('delegate/pool/<int:delegate_pool_id>/comment/<int:comment_id>/update',
         GroupDelegatePoolCommentUpdateAPI.as_view(),
         name='group_user_delegate_pool_update'),
    path('delegate/pool/<int:delegate_pool_id>/comment/<int:comment_id>/delete',
         GroupDelegatePoolCommentDeleteAPI.as_view(),
         name='group_user_delegate_pool_delete'),
    path('delegate/pool/<int:delegate_pool_id>/comment/<int:comment_id>/vote',
         GroupDelegatePoolCommentVoteAPI.as_view(),
         name='group_user_delegate_pool_vote'),

    path('<int:group_id>/schedule', GroupScheduleEventListAPI.as_view(), name='group_schedule'),
    path('<int:group_id>/schedule/create', GroupScheduleEventCreateAPI.as_view(), name='group_schedule_create'),
    path('<int:group_id>/schedule/update', GroupScheduleEventUpdateAPI.as_view(), name='group_schedule_update'),
    path('<int:group_id>/schedule/delete', GroupScheduleEventDeleteAPI.as_view(), name='group_schedule_delete'),
    path('<int:group_id>/schedule/subscribe', GroupScheduleSubscribeAPI.as_view(), name='group_schedule_subscribe'),

    path('<int:group_id>/kanban/entry/list', GroupKanbanEntryListAPI.as_view(), name='group_kanban_entry'),
    path('<int:group_id>/kanban/entry/create', GroupKanbanEntryCreateAPI.as_view(), name='group_kanban_entry_create'),
    path('<int:group_id>/kanban/entry/update', GroupKanbanEntryUpdateAPI.as_view(), name='group_kanban_entry_update'),
    path('<int:group_id>/kanban/entry/delete', GroupKanbanEntryDeleteAPI.as_view(), name='group_kanban_entry_delete'),

    path('thread/list', GroupThreadListAPI.as_view(), name='group_thread'),
    path('<int:group_id>/thread/create', GroupThreadCreateAPI.as_view(), name='group_thread_create'),
    path('thread/<int:thread_id>/update', GroupThreadUpdateAPI.as_view(), name='group_thread_update'),
    path('thread/<int:thread_id>/delete', GroupThreadDeleteAPI.as_view(), name='group_thread_delete'),
    path('thread/<int:thread_id>/vote', GroupThreadVoteUpdateAPI.as_view(), name='group_thread_vote_update'),
    path('thread/<int:thread_id>/comment/list',
         GroupThreadCommentListAPI.as_view(),
         name='group_thread_comment_list'),
    path('thread/<int:thread_id>/comment/<int:comment_id>/ancestor',
         GroupThreadCommentAncestorListAPI.as_view(),
         name='group_thread_comment_ancestor_list'),
    path('thread/<int:thread_id>/comment/create',
         GroupThreadCommentCreateAPI.as_view(),
         name='group_thread_comment_create'),
    path('thread/<int:thread_id>/comment/<int:comment_id>/update',
         GroupThreadCommentUpdateAPI.as_view(),
         name='group_thread_comment_update'),
    path('thread/<int:thread_id>/comment/<int:comment_id>/delete',
         GroupThreadCommentDeleteAPI.as_view(),
         name='group_thread_comment_delete'),
    path('thread/<int:thread_id>/comment/<int:comment_id>/vote',
         GroupThreadCommentVoteAPI.as_view(),
         name='group_thread_comment_vote'),
]
